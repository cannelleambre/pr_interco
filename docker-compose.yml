version: '3.8'

services:
  machine1:
    image: ubuntu:latest
    container_name: machine1
    networks:
      - my_network
    command: sleep infinity

  machine2:
    image: ubuntu:latest
    container_name: machine2
    networks:
      - my_network
    command: sleep infinity
  utilisateur_entreprise:
    image: alpine:latest
    container_name: utilisateur_entreprise
    networks:
      reseau_prive_ent_prim:
        ipv4_address: 192.168.0.2
    command: sleep infinity

  box_ent_prim:
    image: alpine:latest
    container_name: box_ent_prim
    networks:
      reseau_prive_ent_prim:
        ipv4_address: 192.168.0.3
    command: sleep infinity

networks:
  my_network:
    driver: bridge
 reseau_prive_ent_prim:
    driver: bridge
    ipam:
      driver: default
      config: 
        - subnet: "192.168.0.0/23"
services:
  client_a:
    build:
      context: ./client # Utiliser le Dockerfile dans dossier client
    container_name: client
    cap_add:
      - NET_ADMIN  # Ajoute la capacité pour manipuler le réseau
    networks: 
      - Reseaux1
    command: sleep infinity

  router:
    build:
      context: ./routeur # Utiliser le Dockerfile dans le dossier routeur
    container_name: router
    networks:
      Reseaux1:
        ipv4_address: 192.168.1.3
    command: sleep infinity
    cap_add:
      - NET_ADMIN  # Nécessaire pour activer le routage
    sysctls:
      - net.ipv4.ip_forward=1  # Activer le forwarding IP pour permettre le routage

networks:
  Reseaux1:
    driver: bridge  # Le driver est essentiel
    ipam:
      driver: default
      config:
        - subnet: "192.168.1.0/24"
  
